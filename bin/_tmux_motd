#!/usr/bin/env bash

tecreset='\e[0m'

if [[ "$OSTYPE" == "linux-gnu" ]]; then

  echo -ne "\E[32mOperating System: \E[36m"
  echo -ne "$(uname -o) "
  echo -ne "$(lsb_release -si) "
  echo -e "$(lsb_release -sr)"

  echo -ne "\E[32mKernel: \E[36m"
  echo -ne  "$(uname -r) "
  echo -e  "$(uname -m) "

  echo -e "\E[32mHostname: \E[36m$(hostname)"

  echo -e "\E[32mName Servers: \E[36m$(cat /etc/resolv.conf | grep 'nameserver' | awk '{print $2}' | xargs)" 

  echo -e "\E[32mLogged In Users: \E[36m\n$(who)"

  echo -e "\E[32mRam Usages: \E[36m\n $(\free -h | grep -v +)"

  echo -e "\E[32mDisk Usages: \E[36m\n $(\df -h | sed -n '1 p') \n$(df -h | grep '^/dev/*')"

  echo -e "\E[32mSystem Uptime: \E[36m$(uptime | xargs| sed -e 's/.*up\ \(.*\),\ [0-9]*\ .*/\1/g')"

  [[ -f /var/log/auth.log ]] && \
  echo -e "\E[32mFailed Login: \E[36m$(cat /var/log/auth.log | grep sshd | grep Fail | wc -l )" || \
  echo -e "\E[32mFailed Login: \E[36m$( journalctl -u sshd | grep Fail | wc -l )"

  echo -en "$tecreset"

fi

if [[ "$OSTYPE" == "linux-android"* ]]; then

  echo -ne "\E[32mOperating System: \E[36m"
  echo -n "$(uname -o) "

  echo -ne "\E[32mKernel: \E[36m"
  echo -ne  "$(uname -r) "
  echo -e  "$(uname -m) "

  echo -e "\E[32mHostname: \E[36m$(hostname)"

  echo -e "\E[32mRam Usages: \E[36m\n $(\free -m | grep -v +)"

  echo -e "\E[32mDisk Usages: \E[36m\n $(\df -h | sed -n '1 p') \n$(\df -h | grep '^/dev/*')"

  echo -e "\E[32mSystem Uptime: \E[36m$(uptime | xargs| sed -e 's/.*up\ \(.*\),\ [0-9]*\ .*/\1/g')"

  echo -en "$tecreset"

fi

if [[ "$(uname)" == "FreeBSD" ]]; then

  echo -ne "\E[32mOperating System: \E[36m"
  echo -ne "$(uname -o) "
  echo -e "$(uname -r) "

  echo -ne "\E[32mKernel: \E[36m"
  echo -ne  "$(uname -r) "
  echo -e  "$(uname -m) "

  echo -e "\E[32mHostname: \E[36m$(hostname)"

  echo -e "\E[32mName Servers: \E[36m$(cat /etc/resolv.conf | grep 'nameserver' | awk '{print $2}' | xargs)" 

  echo -e "\E[32mLogged In Users: \E[36m\n$(who)"

  echo -e "\E[32mDisk Usages: \E[36m\n $(\df -h | sed -n '1 p') \n$(df -h | grep '^/dev/*')"

  echo -e "\E[32mSystem Uptime: \E[36m$(uptime | xargs| sed -e 's/.*up\ \(.*\),\ [0-9]*\ .*/\1/g')"

  echo -en "$tecreset"

fi
